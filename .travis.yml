language: android

env:
  global:
    - BUILD_API=29
    - BUILD_TOOLS=29.0.3
    - ABI=x86
    - EMU_API=22
    - EMU_FLAVOR=default
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    # PATH order is important, the 'emulator' script exists in more than one place
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}

android:
  components:
    - tools

licenses:
  - 'android-sdk-preview-license-.+'
  - 'android-sdk-license-.+'
  - 'google-gdk-license-.+'

before_install:
  - sudo wget "https://bouncycastle.org/download/bcprov-ext-jdk15on-165.jar" -O "${JAVA_HOME}/jre/lib/ext/bcprov-ext-jdk15on-165.jar"
  - sudo echo "security.provider.11=org.bouncycastle.jce.provider.BouncyCastleProvider" | sudo tee -a ${JAVA_HOME}/jre/lib/security/java.security
  - python -m pip install Pillow --user # library for image manipulation in snapshot tests

before_script:
  # Install Android SDK and run emulator
  - echo 'count=0' > /home/travis/.android/repositories.cfg # avoid harmless sdkmanager warning
  - echo y | sdkmanager "platform-tools" >/dev/null
  - echo y | sdkmanager "tools" >/dev/null
  - echo y | sdkmanager "build-tools;$BUILD_TOOLS" >/dev/null
  - echo y | sdkmanager "platforms;android-$EMU_API" >/dev/null
  - echo y | sdkmanager "platforms;android-$BUILD_API" >/dev/null
  - echo y | sdkmanager "extras;android;m2repository" >/dev/null
  - echo y | sdkmanager "system-images;android-$EMU_API;$EMU_FLAVOR;$ABI"
  - echo no | avdmanager create avd --force -n test -k "system-images;android-$EMU_API;$EMU_FLAVOR;$ABI" -c 100M
  - emulator -verbose -avd test -no-accel -no-snapshot -no-window -no-audio -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &

script:
  - ./gradlew assembleRelease testReleaseUnitTest

  # wait emulator to come alive and start snapshot tests
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
  - ./gradlew verifyDebugAndroidTestScreenshotTest

before_deploy:
  - ./Tools/verifyTag.sh
  - ./gradlew assembleRelease generatePomFileForAarPublication

after_deploy:
  - ./Tools/triggerRondo.sh
  - version=`cat sdk-version.txt`; if [[ $version != *"beta"* ]]; then ./Tools/triggerRN.sh; fi; # trigger ReactNative if not beta release

deploy:
  - provider: script
    skip_cleanup: true
    script: ./gradlew artifactoryPublish bintrayUpload
    on:
      tags: true
